plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

repositories {
    maven {
        url = "https://maven.bai.lol"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

loom {
    forge {
        mixinConfig "strawgolem.forge.mixins.json"
    }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"
    modApi "mcp.mobius.waila:wthit-api:forge-3.11.2"
    runtimeOnly "mcp.mobius.waila:wthit:forge-3.11.2"
    modApi "me.shedaniel.cloth:cloth-config-forge:5.3.63"
    runtimeOnly "me.shedaniel.cloth:cloth-config-forge:5.3.63"

    common(project(path: ":Common", configuration: "dev")) {
        transitive = false
    }
    shadowCommon(project(path: ":Common", configuration: "transformProductionForge")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    from (sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":Common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
